package ddss;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Stack;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

		int N = Integer.parseInt(br.readLine());
		int cnt = 0; // 쌍의 수
		Stack<Integer> stack = new Stack<>();
		// 사람의 키를 담을 스택
		// 모든 사람의 키는 2^31 나노미터보다 작으므로 int 에 담김

		for (int i = 0; i < N; i++) {// N번 반복
			int h = Integer.parseInt(br.readLine()); // 키
			int pop = 0;
			int dupl = 0;
			while (!stack.isEmpty()) {
				if (stack.peek() < h) {// 뒤에 들어올 애들은 이 사람을 못봄
					stack.pop();
					cnt++;
				} else {
					if (stack.peek() == h) { // 같은 경우
						pop = stack.pop(); // 값을 빼서 pop 변수에 저장하고
						dupl++;//몇번 반복되었는지 개수를 셈 (여러번 반복될 수 있으니까)
						cnt++;
						continue;//아래는 실행하지 않음
					} // 같은 숫자가 있는 경우
					cnt++;
					break; //h가 peek보다 작은 경우 카운트하고 반복종료
				} // else 끝
			} // while 끝

			if (pop == h) {
				for (int j = 0; j < dupl; j++) {//중복된 사람만큼 다시 스택에 넣어줌
					stack.push(h);
				}
			}
			stack.push(h); //들어온 값은 일단 스택에 넣음
		}
		bw.write(cnt + "");
		bw.flush();
		bw.close();
		br.close();
	}
}
