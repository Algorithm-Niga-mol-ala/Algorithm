import java.util.Arrays;
import java.util.Scanner;
import java.util.stream.Stream;

// 백준 제출할 때 클래스명은 Main
public class No_1475_방번호 {

	public static void main(String[] args) {
		// 다솜이는 은진이 옆집에 이사왔다. 자기 방 번호를 플라스틱 숫자로 붙인다
		// 옆집에선 플라스틱 숫자를 한 세트로 판다. 세트는 0번부터 9번까지
		// 방 번호가주어졌을 때 필요한 세트의 최솟값을 구해라 (6이랑 9는 뒤집어서 사용 가능)
		
		Scanner sc = new Scanner(System.in); // 입력을 받기 위한 스캐너 객체 생성
		
		int N = sc.nextInt();
		
		// 세트에 들어갈 0~9번의 개수를 카운트하기 위한 배열 선언 
		int[] cnt = new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
		

 		// String.valueOf(value)는 value값을 String 타입으로 변환하는 메서드
 		// mapToInt = 단일 Stream의 원소를 매핑시킨 후, 다시 Stream으로 반환
 		int[] numbers = Stream.of(String.valueOf(N).split("")).mapToInt(Integer::parseInt).toArray();

 		// numbers의 수만큼 반복하여 각각의 수를 카운터에 집어넣어준다.
 		// 단 6과 9는 같이 사용할 수 있으므로 6번 카운터에 같이 집어넣은 후 추가 조건을 아래서 준다.
 		for (int i=0; i<numbers.length; i++) {
 			if (numbers[i] == 0) {
 				cnt[0]++;
 			} else if (numbers[i] == 1) {
 				cnt[1]++;
 			} else if (numbers[i] == 2) {
 				cnt[2]++;
 			} else if (numbers[i] == 3) {
 				cnt[3]++;
 			} else if (numbers[i] == 4) {
 				cnt[4]++;
 			} else if (numbers[i] == 5) {
 				cnt[5]++;
 			} else if (numbers[i] == 6) {
 				cnt[6]++;
 			} else if (numbers[i] == 7) {
 				cnt[7]++;
 			} else if (numbers[i] == 8) {
 				cnt[8]++;
 			} else if (numbers[i] == 9) {
 				cnt[6]++;
 			}
 			
 		}
 		
 		// 6과 9 카운터 더한 것을 절반의 수만큼 사용하는 것을 구
 		if (cnt[6]%2 == 0) {
			cnt[6] = cnt[6]/2;
 		} else {
			cnt[6] = cnt[6]/2+1;
		}
 		
 		// cnt 배열의 최대값을 찾는다.
 		int max = Arrays.stream(cnt).max().getAsInt();
 		
 		System.out.print(max); // 최대값 호출 
	}
}
